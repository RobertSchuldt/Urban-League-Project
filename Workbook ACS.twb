<?xml version='1.0' encoding='utf-8' ?>

<!-- build 10300.19.0515.1506                               -->
<workbook original-version='10.3' source-build='10.3.21 (10300.19.0515.1506)' source-platform='win' version='10.3' xml:base='https://us-east-1.online.tableau.com' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <repository-location id='June5thMeeting' path='/t/robertschuldtresearch/workbooks' revision='1.0' site='robertschuldtresearch' />
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='State level insurance rates' inline='true' name='federated.1gnqv5n0oig9io18z156r1uqzl5c' version='10.3'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='State level insurance rates' name='textscan.0d01a2y0lqg31z14530j21orypd3'>
            <connection class='textscan' directory='Z:/DATA/Urban League Project' filename='State level insurance rates.csv' password='' server='' workgroup-auth-mode='as-is' />
          </named-connection>
        </named-connections>
        <relation connection='textscan.0d01a2y0lqg31z14530j21orypd3' name='State level insurance rates.csv' table='[State level insurance rates#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='integer' name='VAR1' ordinal='0' />
            <column datatype='string' name='State' ordinal='1' />
            <column datatype='integer' name='Total_White_19_25' ordinal='2' />
            <column datatype='integer' name='Total_White_Insur_19_25' ordinal='3' />
            <column datatype='integer' name='Total_White_UnInsur_19_25' ordinal='4' />
            <column datatype='integer' name='Total_White_26_34' ordinal='5' />
            <column datatype='integer' name='Total_White_Insur_26_34' ordinal='6' />
            <column datatype='integer' name='Total_White_UnInsur_26_34' ordinal='7' />
            <column datatype='integer' name='Total_White_35_44' ordinal='8' />
            <column datatype='integer' name='Total_White_Insur_35_44' ordinal='9' />
            <column datatype='integer' name='Total_White_UnInsur_35_44' ordinal='10' />
            <column datatype='integer' name='Total_AA_19_25' ordinal='11' />
            <column datatype='integer' name='Total_AA_Insur_19_25' ordinal='12' />
            <column datatype='integer' name='Total_AA_UnInsur_19_25' ordinal='13' />
            <column datatype='integer' name='Total_AA_26_34' ordinal='14' />
            <column datatype='integer' name='Total_AA_Insur_26_34' ordinal='15' />
            <column datatype='integer' name='Total_AA_UnInsur_26_34' ordinal='16' />
            <column datatype='integer' name='Total_AA_35_44' ordinal='17' />
            <column datatype='integer' name='Total_AA_Insur_35_44' ordinal='18' />
            <column datatype='integer' name='Total_AA_UnInsur_35_44' ordinal='19' />
            <column datatype='integer' name='VAR21' ordinal='20' />
            <column datatype='integer' name='Year' ordinal='21' />
            <column datatype='integer' name='tw' ordinal='22' />
            <column datatype='integer' name='dif' ordinal='23' />
            <column datatype='real' name='millenial_aa_un_19_34' ordinal='24' />
            <column datatype='real' name='millenial_white_un_19_34' ordinal='25' />
            <column datatype='real' name='arkansas_aa_uninsured' ordinal='26' />
            <column datatype='real' name='arkansas_white_uninsured' ordinal='27' />
            <column datatype='integer' name='total_bu_19' ordinal='28' />
            <column datatype='integer' name='total_bu_26' ordinal='29' />
            <column datatype='integer' name='totalaa1' ordinal='30' />
            <column datatype='integer' name='totalaa2' ordinal='31' />
            <column datatype='integer' name='total_wu_19' ordinal='32' />
            <column datatype='integer' name='total_wu_26' ordinal='33' />
            <column datatype='integer' name='totalw1' ordinal='34' />
            <column datatype='integer' name='totalw2' ordinal='35' />
            <column datatype='real' name='other_states_aa_uninsured' ordinal='36' />
            <column datatype='real' name='other_states_white_uninsured' ordinal='37' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>VAR1</remote-name>
            <remote-type>20</remote-type>
            <local-name>[VAR1]</local-name>
            <parent-name>[State level insurance rates.csv]</parent-name>
            <remote-alias>VAR1</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>State</remote-name>
            <remote-type>129</remote-type>
            <local-name>[State]</local-name>
            <parent-name>[State level insurance rates.csv]</parent-name>
            <remote-alias>State</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Total_White_19_25</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Total_White_19_25]</local-name>
            <parent-name>[State level insurance rates.csv]</parent-name>
            <remote-alias>Total_White_19_25</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Total_White_Insur_19_25</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Total_White_Insur_19_25]</local-name>
            <parent-name>[State level insurance rates.csv]</parent-name>
            <remote-alias>Total_White_Insur_19_25</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Total_White_UnInsur_19_25</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Total_White_UnInsur_19_25]</local-name>
            <parent-name>[State level insurance rates.csv]</parent-name>
            <remote-alias>Total_White_UnInsur_19_25</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Total_White_26_34</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Total_White_26_34]</local-name>
            <parent-name>[State level insurance rates.csv]</parent-name>
            <remote-alias>Total_White_26_34</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Total_White_Insur_26_34</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Total_White_Insur_26_34]</local-name>
            <parent-name>[State level insurance rates.csv]</parent-name>
            <remote-alias>Total_White_Insur_26_34</remote-alias>
            <ordinal>6</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Total_White_UnInsur_26_34</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Total_White_UnInsur_26_34]</local-name>
            <parent-name>[State level insurance rates.csv]</parent-name>
            <remote-alias>Total_White_UnInsur_26_34</remote-alias>
            <ordinal>7</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Total_White_35_44</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Total_White_35_44]</local-name>
            <parent-name>[State level insurance rates.csv]</parent-name>
            <remote-alias>Total_White_35_44</remote-alias>
            <ordinal>8</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Total_White_Insur_35_44</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Total_White_Insur_35_44]</local-name>
            <parent-name>[State level insurance rates.csv]</parent-name>
            <remote-alias>Total_White_Insur_35_44</remote-alias>
            <ordinal>9</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Total_White_UnInsur_35_44</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Total_White_UnInsur_35_44]</local-name>
            <parent-name>[State level insurance rates.csv]</parent-name>
            <remote-alias>Total_White_UnInsur_35_44</remote-alias>
            <ordinal>10</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Total_AA_19_25</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Total_AA_19_25]</local-name>
            <parent-name>[State level insurance rates.csv]</parent-name>
            <remote-alias>Total_AA_19_25</remote-alias>
            <ordinal>11</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Total_AA_Insur_19_25</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Total_AA_Insur_19_25]</local-name>
            <parent-name>[State level insurance rates.csv]</parent-name>
            <remote-alias>Total_AA_Insur_19_25</remote-alias>
            <ordinal>12</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Total_AA_UnInsur_19_25</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Total_AA_UnInsur_19_25]</local-name>
            <parent-name>[State level insurance rates.csv]</parent-name>
            <remote-alias>Total_AA_UnInsur_19_25</remote-alias>
            <ordinal>13</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Total_AA_26_34</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Total_AA_26_34]</local-name>
            <parent-name>[State level insurance rates.csv]</parent-name>
            <remote-alias>Total_AA_26_34</remote-alias>
            <ordinal>14</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Total_AA_Insur_26_34</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Total_AA_Insur_26_34]</local-name>
            <parent-name>[State level insurance rates.csv]</parent-name>
            <remote-alias>Total_AA_Insur_26_34</remote-alias>
            <ordinal>15</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Total_AA_UnInsur_26_34</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Total_AA_UnInsur_26_34]</local-name>
            <parent-name>[State level insurance rates.csv]</parent-name>
            <remote-alias>Total_AA_UnInsur_26_34</remote-alias>
            <ordinal>16</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Total_AA_35_44</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Total_AA_35_44]</local-name>
            <parent-name>[State level insurance rates.csv]</parent-name>
            <remote-alias>Total_AA_35_44</remote-alias>
            <ordinal>17</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Total_AA_Insur_35_44</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Total_AA_Insur_35_44]</local-name>
            <parent-name>[State level insurance rates.csv]</parent-name>
            <remote-alias>Total_AA_Insur_35_44</remote-alias>
            <ordinal>18</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Total_AA_UnInsur_35_44</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Total_AA_UnInsur_35_44]</local-name>
            <parent-name>[State level insurance rates.csv]</parent-name>
            <remote-alias>Total_AA_UnInsur_35_44</remote-alias>
            <ordinal>19</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>VAR21</remote-name>
            <remote-type>20</remote-type>
            <local-name>[VAR21]</local-name>
            <parent-name>[State level insurance rates.csv]</parent-name>
            <remote-alias>VAR21</remote-alias>
            <ordinal>20</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Year]</local-name>
            <parent-name>[State level insurance rates.csv]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>21</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>tw</remote-name>
            <remote-type>20</remote-type>
            <local-name>[tw]</local-name>
            <parent-name>[State level insurance rates.csv]</parent-name>
            <remote-alias>tw</remote-alias>
            <ordinal>22</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>dif</remote-name>
            <remote-type>20</remote-type>
            <local-name>[dif]</local-name>
            <parent-name>[State level insurance rates.csv]</parent-name>
            <remote-alias>dif</remote-alias>
            <ordinal>23</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>millenial_aa_un_19_34</remote-name>
            <remote-type>5</remote-type>
            <local-name>[millenial_aa_un_19_34]</local-name>
            <parent-name>[State level insurance rates.csv]</parent-name>
            <remote-alias>millenial_aa_un_19_34</remote-alias>
            <ordinal>24</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>millenial_white_un_19_34</remote-name>
            <remote-type>5</remote-type>
            <local-name>[millenial_white_un_19_34]</local-name>
            <parent-name>[State level insurance rates.csv]</parent-name>
            <remote-alias>millenial_white_un_19_34</remote-alias>
            <ordinal>25</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>arkansas_aa_uninsured</remote-name>
            <remote-type>5</remote-type>
            <local-name>[arkansas_aa_uninsured]</local-name>
            <parent-name>[State level insurance rates.csv]</parent-name>
            <remote-alias>arkansas_aa_uninsured</remote-alias>
            <ordinal>26</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>arkansas_white_uninsured</remote-name>
            <remote-type>5</remote-type>
            <local-name>[arkansas_white_uninsured]</local-name>
            <parent-name>[State level insurance rates.csv]</parent-name>
            <remote-alias>arkansas_white_uninsured</remote-alias>
            <ordinal>27</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_bu_19</remote-name>
            <remote-type>20</remote-type>
            <local-name>[total_bu_19]</local-name>
            <parent-name>[State level insurance rates.csv]</parent-name>
            <remote-alias>total_bu_19</remote-alias>
            <ordinal>28</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_bu_26</remote-name>
            <remote-type>20</remote-type>
            <local-name>[total_bu_26]</local-name>
            <parent-name>[State level insurance rates.csv]</parent-name>
            <remote-alias>total_bu_26</remote-alias>
            <ordinal>29</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>totalaa1</remote-name>
            <remote-type>20</remote-type>
            <local-name>[totalaa1]</local-name>
            <parent-name>[State level insurance rates.csv]</parent-name>
            <remote-alias>totalaa1</remote-alias>
            <ordinal>30</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>totalaa2</remote-name>
            <remote-type>20</remote-type>
            <local-name>[totalaa2]</local-name>
            <parent-name>[State level insurance rates.csv]</parent-name>
            <remote-alias>totalaa2</remote-alias>
            <ordinal>31</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_wu_19</remote-name>
            <remote-type>20</remote-type>
            <local-name>[total_wu_19]</local-name>
            <parent-name>[State level insurance rates.csv]</parent-name>
            <remote-alias>total_wu_19</remote-alias>
            <ordinal>32</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_wu_26</remote-name>
            <remote-type>20</remote-type>
            <local-name>[total_wu_26]</local-name>
            <parent-name>[State level insurance rates.csv]</parent-name>
            <remote-alias>total_wu_26</remote-alias>
            <ordinal>33</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>totalw1</remote-name>
            <remote-type>20</remote-type>
            <local-name>[totalw1]</local-name>
            <parent-name>[State level insurance rates.csv]</parent-name>
            <remote-alias>totalw1</remote-alias>
            <ordinal>34</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>totalw2</remote-name>
            <remote-type>20</remote-type>
            <local-name>[totalw2]</local-name>
            <parent-name>[State level insurance rates.csv]</parent-name>
            <remote-alias>totalw2</remote-alias>
            <ordinal>35</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>other_states_aa_uninsured</remote-name>
            <remote-type>5</remote-type>
            <local-name>[other_states_aa_uninsured]</local-name>
            <parent-name>[State level insurance rates.csv]</parent-name>
            <remote-alias>other_states_aa_uninsured</remote-alias>
            <ordinal>36</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>other_states_white_uninsured</remote-name>
            <remote-type>5</remote-type>
            <local-name>[other_states_white_uninsured]</local-name>
            <parent-name>[State level insurance rates.csv]</parent-name>
            <remote-alias>other_states_white_uninsured</remote-alias>
            <ordinal>37</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[State level insurance rates.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' name='[:Measure Names]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;[federated.1gnqv5n0oig9io18z156r1uqzl5c].[sum:arkansas_aa_uninsured:qk]&quot;' value='Arkansas African American' />
          <alias key='&quot;[federated.1gnqv5n0oig9io18z156r1uqzl5c].[sum:arkansas_white_uninsured:qk]&quot;' value='Arkansas White' />
          <alias key='&quot;[federated.1gnqv5n0oig9io18z156r1uqzl5c].[sum:millenial_aa_un_19_34:qk]&quot;' value='AA' />
          <alias key='&quot;[federated.1gnqv5n0oig9io18z156r1uqzl5c].[sum:millenial_white_un_19_34:qk]&quot;' value='White' />
          <alias key='&quot;[federated.1gnqv5n0oig9io18z156r1uqzl5c].[usr:Calculation_921830614874894338:qk]&quot;' value='National African American' />
          <alias key='&quot;[federated.1gnqv5n0oig9io18z156r1uqzl5c].[usr:Calculation_921830614874968067:qk]&quot;' value=' National White ' />
          <alias key='&quot;[federated.1gnqv5n0oig9io18z156r1uqzl5c].[usr:Calculation_921830614877184004:qk]&quot;' value='Mississippi AA 19-34 Uninsured Rate' />
          <alias key='&quot;[federated.1gnqv5n0oig9io18z156r1uqzl5c].[usr:Calculation_921830614877245445:qk]&quot;' value='Mississippi White 19-34 Uninsured Rate' />
        </aliases>
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column caption='Total AA 19 25' datatype='integer' name='[Total_AA_19_25]' role='measure' type='quantitative' />
      <column caption='Total AA 26 34' datatype='integer' name='[Total_AA_26_34]' role='measure' type='quantitative' />
      <column caption='Total AA 35 44' datatype='integer' name='[Total_AA_35_44]' role='measure' type='quantitative' />
      <column caption='Total AA Insur 19 25' datatype='integer' name='[Total_AA_Insur_19_25]' role='measure' type='quantitative' />
      <column caption='Total AA Insur 26 34' datatype='integer' name='[Total_AA_Insur_26_34]' role='measure' type='quantitative' />
      <column caption='Total AA Insur 35 44' datatype='integer' name='[Total_AA_Insur_35_44]' role='measure' type='quantitative' />
      <column caption='Total AA UnInsur 19 25' datatype='integer' name='[Total_AA_UnInsur_19_25]' role='measure' type='quantitative' />
      <column caption='Total AA UnInsur 26 34' datatype='integer' name='[Total_AA_UnInsur_26_34]' role='measure' type='quantitative' />
      <column caption='Total AA UnInsur 35 44' datatype='integer' name='[Total_AA_UnInsur_35_44]' role='measure' type='quantitative' />
      <column caption='Total White 19 25' datatype='integer' name='[Total_White_19_25]' role='measure' type='quantitative' />
      <column caption='Total White 26 34' datatype='integer' name='[Total_White_26_34]' role='measure' type='quantitative' />
      <column caption='Total White 35 44' datatype='integer' name='[Total_White_35_44]' role='measure' type='quantitative' />
      <column caption='Total White Insur 19 25' datatype='integer' name='[Total_White_Insur_19_25]' role='measure' type='quantitative' />
      <column caption='Total White Insur 26 34' datatype='integer' name='[Total_White_Insur_26_34]' role='measure' type='quantitative' />
      <column caption='Total White Insur 35 44' datatype='integer' name='[Total_White_Insur_35_44]' role='measure' type='quantitative' />
      <column caption='Total White UnInsur 19 25' datatype='integer' name='[Total_White_UnInsur_19_25]' role='measure' type='quantitative' />
      <column caption='Total White UnInsur 26 34' datatype='integer' name='[Total_White_UnInsur_26_34]' role='measure' type='quantitative' />
      <column caption='Total White UnInsur 35 44' datatype='integer' name='[Total_White_UnInsur_35_44]' role='measure' type='quantitative' />
      <column caption='Var1' datatype='integer' name='[VAR1]' role='measure' type='quantitative' />
      <column caption='Var21' datatype='integer' name='[VAR21]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
      <column caption='Arkansas Aa Uninsured' datatype='real' name='[arkansas_aa_uninsured]' role='measure' type='quantitative' />
      <column caption='Arkansas White Uninsured' datatype='real' name='[arkansas_white_uninsured]' role='measure' type='quantitative' />
      <column caption='Dif' datatype='integer' name='[dif]' role='measure' type='quantitative' />
      <column caption='Millenial Aa Un 19 34' datatype='real' name='[millenial_aa_un_19_34]' role='measure' type='quantitative' />
      <column caption='Millenial White Un 19 34' datatype='real' name='[millenial_white_un_19_34]' role='measure' type='quantitative' />
      <column caption='Other States Aa Uninsured' datatype='real' name='[other_states_aa_uninsured]' role='measure' type='quantitative' />
      <column caption='Other States White Uninsured' datatype='real' name='[other_states_white_uninsured]' role='measure' type='quantitative' />
      <column caption='Total Bu 19' datatype='integer' name='[total_bu_19]' role='measure' type='quantitative' />
      <column caption='Total Bu 26' datatype='integer' name='[total_bu_26]' role='measure' type='quantitative' />
      <column caption='Total Wu 19' datatype='integer' name='[total_wu_19]' role='measure' type='quantitative' />
      <column caption='Total Wu 26' datatype='integer' name='[total_wu_26]' role='measure' type='quantitative' />
      <column caption='Totalaa1' datatype='integer' name='[totalaa1]' role='measure' type='quantitative' />
      <column caption='Totalaa2' datatype='integer' name='[totalaa2]' role='measure' type='quantitative' />
      <column caption='Totalw1' datatype='integer' name='[totalw1]' role='measure' type='quantitative' />
      <column caption='Totalw2' datatype='integer' name='[totalw2]' role='measure' type='quantitative' />
      <column caption='Tw' datatype='integer' name='[tw]' role='measure' type='quantitative' />
      <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
      <column-instance column='[arkansas_aa_uninsured]' derivation='Sum' name='[sum:arkansas_aa_uninsured:qk]' pivot='key' type='quantitative' />
      <column-instance column='[arkansas_white_uninsured]' derivation='Sum' name='[sum:arkansas_white_uninsured:qk]' pivot='key' type='quantitative' />
      <column-instance column='[millenial_aa_un_19_34]' derivation='Sum' name='[sum:millenial_aa_un_19_34:qk]' pivot='key' type='quantitative' />
      <column-instance column='[millenial_white_un_19_34]' derivation='Sum' name='[sum:millenial_white_un_19_34:qk]' pivot='key' type='quantitative' />
      <column-instance column='[other_states_aa_uninsured]' derivation='Sum' name='[sum:other_states_aa_uninsured:qk]' pivot='key' type='quantitative' />
      <column-instance column='[other_states_white_uninsured]' derivation='Sum' name='[sum:other_states_white_uninsured:qk]' pivot='key' type='quantitative' />
      <layout dim-ordering='alphabetic' dim-percentage='0.268053' measure-ordering='alphabetic' measure-percentage='0.731947' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:State:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Arkansas&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Oklahoma&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;Missouri&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Texas&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Mississippi&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;Tennessee&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Louisiana&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1gnqv5n0oig9io18z156r1uqzl5c].[sum:arkansas_white_uninsured:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.1gnqv5n0oig9io18z156r1uqzl5c].[sum:millenial_white_un_19_34:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.1gnqv5n0oig9io18z156r1uqzl5c].[usr:Calculation_921830614874238977:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.1gnqv5n0oig9io18z156r1uqzl5c].[usr:Calculation_921830614877245445:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.1gnqv5n0oig9io18z156r1uqzl5c].[sum:millenial_aa_un_19_34:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.1gnqv5n0oig9io18z156r1uqzl5c].[usr:Calculation_921830614874161152:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.1gnqv5n0oig9io18z156r1uqzl5c].[usr:Calculation_921830614877184004:qk]&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;[federated.1gnqv5n0oig9io18z156r1uqzl5c].[sum:other_states_white_uninsured:qk]&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;[federated.1gnqv5n0oig9io18z156r1uqzl5c].[usr:Calculation_921830614874968067:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.1gnqv5n0oig9io18z156r1uqzl5c].[sum:arkansas_aa_uninsured:qk]&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;[federated.1gnqv5n0oig9io18z156r1uqzl5c].[sum:other_states_aa_uninsured:qk]&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;[federated.1gnqv5n0oig9io18z156r1uqzl5c].[usr:Calculation_921830614874894338:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1gnqv5n0oig9io18z156r1uqzl5c]&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
  </datasources>
  <worksheets>
    <worksheet name='Arkansas'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Change in Arkansas Uninsured Rate of White and African American Millenials Age 19 to 34</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='State level insurance rates' name='federated.1gnqv5n0oig9io18z156r1uqzl5c' />
          </datasources>
          <datasource-dependencies datasource='federated.1gnqv5n0oig9io18z156r1uqzl5c'>
            <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
            <column caption='Arkansas Aa Uninsured' datatype='real' name='[arkansas_aa_uninsured]' role='measure' type='quantitative' />
            <column caption='Arkansas White Uninsured' datatype='real' name='[arkansas_white_uninsured]' role='measure' type='quantitative' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:qk]' pivot='key' type='quantitative' />
            <column-instance column='[arkansas_aa_uninsured]' derivation='Sum' name='[sum:arkansas_aa_uninsured:qk]' pivot='key' type='quantitative' />
            <column-instance column='[arkansas_white_uninsured]' derivation='Sum' name='[sum:arkansas_white_uninsured:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1gnqv5n0oig9io18z156r1uqzl5c].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1gnqv5n0oig9io18z156r1uqzl5c].[sum:arkansas_aa_uninsured:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1gnqv5n0oig9io18z156r1uqzl5c].[sum:arkansas_white_uninsured:qk]&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1gnqv5n0oig9io18z156r1uqzl5c].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1gnqv5n0oig9io18z156r1uqzl5c].[Multiple Values]' scope='rows' value='Uninsured Rate' />
            <format attr='subtitle' class='0' field='[federated.1gnqv5n0oig9io18z156r1uqzl5c].[Multiple Values]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.1gnqv5n0oig9io18z156r1uqzl5c].[Multiple Values]' scope='rows' value='true' />
            <encoding attr='space' class='0' field='[federated.1gnqv5n0oig9io18z156r1uqzl5c].[none:Year:qk]' field-type='quantitative' max='2018' min='2011' range-type='fixed' scope='cols' type='space' />
            <format attr='subtitle' class='0' field='[federated.1gnqv5n0oig9io18z156r1uqzl5c].[none:Year:qk]' scope='cols' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.1gnqv5n0oig9io18z156r1uqzl5c].[none:Year:qk]' scope='cols' value='true' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.1gnqv5n0oig9io18z156r1uqzl5c].[:Measure Names]' value='Uninsured Rate of Millenials Age 19-34'>
              <formatted-text>
                <run>Uninsured Rate of Millenials Age 19-34</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1gnqv5n0oig9io18z156r1uqzl5c].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-mode' value='all' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1gnqv5n0oig9io18z156r1uqzl5c].[Multiple Values]</rows>
        <cols>[federated.1gnqv5n0oig9io18z156r1uqzl5c].[none:Year:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Arkansas V Border'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Change in Uninsured Rate of White and African American Millenials Age 19 to 34:  Arkansas Vs. Border States&#10;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='State level insurance rates' name='federated.1gnqv5n0oig9io18z156r1uqzl5c' />
          </datasources>
          <datasource-dependencies datasource='federated.1gnqv5n0oig9io18z156r1uqzl5c'>
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
            <column caption='Millenial Aa Un 19 34' datatype='real' name='[millenial_aa_un_19_34]' role='measure' type='quantitative' />
            <column caption='Millenial White Un 19 34' datatype='real' name='[millenial_white_un_19_34]' role='measure' type='quantitative' />
            <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:qk]' pivot='key' type='quantitative' />
            <column-instance column='[millenial_aa_un_19_34]' derivation='Sum' name='[sum:millenial_aa_un_19_34:qk]' pivot='key' type='quantitative' />
            <column-instance column='[millenial_white_un_19_34]' derivation='Sum' name='[sum:millenial_white_un_19_34:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1gnqv5n0oig9io18z156r1uqzl5c].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1gnqv5n0oig9io18z156r1uqzl5c].[sum:millenial_aa_un_19_34:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1gnqv5n0oig9io18z156r1uqzl5c].[sum:millenial_white_un_19_34:qk]&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1gnqv5n0oig9io18z156r1uqzl5c].[none:State:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Arkansas&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Louisiana&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Mississippi&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Missouri&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Oklahoma&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Tennessee&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Texas&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[federated.1gnqv5n0oig9io18z156r1uqzl5c].[none:State:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Alaska&quot;</bucket>
              <bucket>&quot;Arizona&quot;</bucket>
              <bucket>&quot;Arkansas&quot;</bucket>
              <bucket>&quot;Alabama&quot;</bucket>
              <bucket>&quot;California&quot;</bucket>
              <bucket>&quot;Colorado&quot;</bucket>
              <bucket>&quot;Connecticut&quot;</bucket>
              <bucket>&quot;Delaware&quot;</bucket>
              <bucket>&quot;District of Columbia&quot;</bucket>
              <bucket>&quot;Florida&quot;</bucket>
              <bucket>&quot;Georgia&quot;</bucket>
              <bucket>&quot;Hawaii&quot;</bucket>
              <bucket>&quot;Idaho&quot;</bucket>
              <bucket>&quot;Illinois&quot;</bucket>
              <bucket>&quot;Indiana&quot;</bucket>
              <bucket>&quot;Iowa&quot;</bucket>
              <bucket>&quot;Kansas&quot;</bucket>
              <bucket>&quot;Kentucky&quot;</bucket>
              <bucket>&quot;Louisiana&quot;</bucket>
              <bucket>&quot;Maine&quot;</bucket>
              <bucket>&quot;Maryland&quot;</bucket>
              <bucket>&quot;Massachusetts&quot;</bucket>
              <bucket>&quot;Michigan&quot;</bucket>
              <bucket>&quot;Minnesota&quot;</bucket>
              <bucket>&quot;Mississippi&quot;</bucket>
              <bucket>&quot;Missouri&quot;</bucket>
              <bucket>&quot;Montana&quot;</bucket>
              <bucket>&quot;Nebraska&quot;</bucket>
              <bucket>&quot;Nevada&quot;</bucket>
              <bucket>&quot;New Hampshire&quot;</bucket>
              <bucket>&quot;New Jersey&quot;</bucket>
              <bucket>&quot;New Mexico&quot;</bucket>
              <bucket>&quot;New York&quot;</bucket>
              <bucket>&quot;North Carolina&quot;</bucket>
              <bucket>&quot;North Dakota&quot;</bucket>
              <bucket>&quot;Ohio&quot;</bucket>
              <bucket>&quot;Oklahoma&quot;</bucket>
              <bucket>&quot;Oregon&quot;</bucket>
              <bucket>&quot;Pennsylvania&quot;</bucket>
              <bucket>&quot;Rhode Island&quot;</bucket>
              <bucket>&quot;South Carolina&quot;</bucket>
              <bucket>&quot;South Dakota&quot;</bucket>
              <bucket>&quot;Tennessee&quot;</bucket>
              <bucket>&quot;Texas&quot;</bucket>
              <bucket>&quot;Utah&quot;</bucket>
              <bucket>&quot;Vermont&quot;</bucket>
              <bucket>&quot;Virginia&quot;</bucket>
              <bucket>&quot;Washington&quot;</bucket>
              <bucket>&quot;West Virginia&quot;</bucket>
              <bucket>&quot;Wisconsin&quot;</bucket>
              <bucket>&quot;Wyoming&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <slices>
            <column>[federated.1gnqv5n0oig9io18z156r1uqzl5c].[none:State:nk]</column>
            <column>[federated.1gnqv5n0oig9io18z156r1uqzl5c].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1gnqv5n0oig9io18z156r1uqzl5c].[none:Year:qk]' field-type='quantitative' max='2018' min='2011' range-type='fixed' scope='cols' type='space' />
            <format attr='subtitle' class='0' field='[federated.1gnqv5n0oig9io18z156r1uqzl5c].[none:Year:qk]' scope='cols' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.1gnqv5n0oig9io18z156r1uqzl5c].[none:Year:qk]' scope='cols' value='true' />
            <format attr='title' class='0' field='[federated.1gnqv5n0oig9io18z156r1uqzl5c].[Multiple Values]' scope='rows' value='Uninsured Rate %' />
            <format attr='subtitle' class='0' field='[federated.1gnqv5n0oig9io18z156r1uqzl5c].[Multiple Values]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.1gnqv5n0oig9io18z156r1uqzl5c].[Multiple Values]' scope='rows' value='true' />
          </style-rule>
          <style-rule element='header'>
            <format attr='background-color' field='[federated.1gnqv5n0oig9io18z156r1uqzl5c].[none:Year:qk]' value='#e6e6e6' />
          </style-rule>
          <style-rule element='dropline'>
            <format attr='line-visibility' value='on' />
            <format attr='line-pattern-only' value='dashed' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='line-visibility' value='on' />
            <format attr='line-pattern-only' value='dashed' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='line-visibility' value='on' />
            <format attr='line-pattern-only' value='dotted' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1gnqv5n0oig9io18z156r1uqzl5c].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.86756908893585205' />
                <format attr='mark-labels-cull' value='false' />
                <format attr='mark-labels-mode' value='line-ends' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1gnqv5n0oig9io18z156r1uqzl5c].[Multiple Values]</rows>
        <cols>([federated.1gnqv5n0oig9io18z156r1uqzl5c].[none:State:nk] * [federated.1gnqv5n0oig9io18z156r1uqzl5c].[none:Year:qk])</cols>
      </table>
    </worksheet>
    <worksheet name='Arkansas VS National'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Change in Uninsured Rate of White and African American Millenials Age 19 to 34:  National Vs. Arkansas</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='State level insurance rates' name='federated.1gnqv5n0oig9io18z156r1uqzl5c' />
          </datasources>
          <datasource-dependencies datasource='federated.1gnqv5n0oig9io18z156r1uqzl5c'>
            <column caption='SUM(if [State] = &quot;Alabama&quot; then [Other States Aa Uninsured]END)' datatype='real' name='[Calculation_921830614874894338]' role='measure' type='quantitative' user:unnamed='Sheet 4'>
              <calculation class='tableau' formula='SUM(if [State] = &quot;Alabama&quot; then [other_states_aa_uninsured]END)' />
            </column>
            <column caption='SUM(if [State] = &quot;Alabama&quot; then [Other States White Uninsured...' datatype='real' name='[Calculation_921830614874968067]' role='measure' type='quantitative' user:unnamed='Sheet 4'>
              <calculation class='tableau' formula='SUM(if [State] = &quot;Alabama&quot; then [other_states_white_uninsured] END)' />
            </column>
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
            <column caption='Arkansas Aa Uninsured' datatype='real' name='[arkansas_aa_uninsured]' role='measure' type='quantitative' />
            <column caption='Arkansas White Uninsured' datatype='real' name='[arkansas_white_uninsured]' role='measure' type='quantitative' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:qk]' pivot='key' type='quantitative' />
            <column caption='Other States Aa Uninsured' datatype='real' name='[other_states_aa_uninsured]' role='measure' type='quantitative' />
            <column caption='Other States White Uninsured' datatype='real' name='[other_states_white_uninsured]' role='measure' type='quantitative' />
            <column-instance column='[arkansas_aa_uninsured]' derivation='Sum' name='[sum:arkansas_aa_uninsured:qk]' pivot='key' type='quantitative' />
            <column-instance column='[arkansas_white_uninsured]' derivation='Sum' name='[sum:arkansas_white_uninsured:qk]' pivot='key' type='quantitative' />
            <column-instance column='[other_states_white_uninsured]' derivation='Sum' name='[sum:other_states_white_uninsured:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_921830614874894338]' derivation='User' name='[usr:Calculation_921830614874894338:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_921830614874968067]' derivation='User' name='[usr:Calculation_921830614874968067:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1gnqv5n0oig9io18z156r1uqzl5c].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1gnqv5n0oig9io18z156r1uqzl5c].[sum:arkansas_aa_uninsured:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1gnqv5n0oig9io18z156r1uqzl5c].[sum:arkansas_white_uninsured:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1gnqv5n0oig9io18z156r1uqzl5c].[usr:Calculation_921830614874894338:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1gnqv5n0oig9io18z156r1uqzl5c].[usr:Calculation_921830614874968067:qk]&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[federated.1gnqv5n0oig9io18z156r1uqzl5c].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.1gnqv5n0oig9io18z156r1uqzl5c].[sum:arkansas_aa_uninsured:qk]&quot;</bucket>
              <bucket>&quot;[federated.1gnqv5n0oig9io18z156r1uqzl5c].[sum:arkansas_white_uninsured:qk]&quot;</bucket>
              <bucket>&quot;[federated.1gnqv5n0oig9io18z156r1uqzl5c].[usr:Calculation_921830614874894338:qk]&quot;</bucket>
              <bucket>&quot;[federated.1gnqv5n0oig9io18z156r1uqzl5c].[sum:other_states_white_uninsured:qk]&quot;</bucket>
            </dictionary>
          </sort>
          <slices>
            <column>[federated.1gnqv5n0oig9io18z156r1uqzl5c].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1gnqv5n0oig9io18z156r1uqzl5c].[Multiple Values]' scope='rows' value='Uninsured Rate %' />
            <format attr='subtitle' class='0' field='[federated.1gnqv5n0oig9io18z156r1uqzl5c].[Multiple Values]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.1gnqv5n0oig9io18z156r1uqzl5c].[Multiple Values]' scope='rows' value='true' />
            <encoding attr='space' class='0' field='[federated.1gnqv5n0oig9io18z156r1uqzl5c].[none:Year:qk]' field-type='quantitative' max='2018' min='2011' range-type='fixed' scope='cols' type='space' />
            <format attr='subtitle' class='0' field='[federated.1gnqv5n0oig9io18z156r1uqzl5c].[none:Year:qk]' scope='cols' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.1gnqv5n0oig9io18z156r1uqzl5c].[none:Year:qk]' scope='cols' value='true' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.1gnqv5n0oig9io18z156r1uqzl5c].[sum:arkansas_aa_uninsured:qk]' value='' />
          </style-rule>
          <style-rule element='dropline'>
            <format attr='line-visibility' value='on' />
            <format attr='line-pattern-only' value='dashed' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='line-visibility' value='on' />
            <format attr='line-pattern-only' value='dashed' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='line-visibility' value='on' />
            <format attr='line-pattern-only' value='dotted' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.1gnqv5n0oig9io18z156r1uqzl5c].[:Measure Names]' value='Uninsured Rate of Millenials Age 19-34&#10;'>
              <formatted-text>
                <run>Uninsured Rate of Millenials Age 19-34&#10;</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1gnqv5n0oig9io18z156r1uqzl5c].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.86756908893585205' />
                <format attr='mark-labels-cull' value='false' />
                <format attr='mark-labels-mode' value='line-ends' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1gnqv5n0oig9io18z156r1uqzl5c].[Multiple Values]</rows>
        <cols>[federated.1gnqv5n0oig9io18z156r1uqzl5c].[none:Year:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Arkansas VS National Crosstab'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Change in Uninsured Rate of White and African American Millenials Age 19 to 34:  National Vs. Arkansas</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='State level insurance rates' name='federated.1gnqv5n0oig9io18z156r1uqzl5c' />
          </datasources>
          <datasource-dependencies datasource='federated.1gnqv5n0oig9io18z156r1uqzl5c'>
            <column caption='SUM(if [State] = &quot;Alabama&quot; then [Other States Aa Uninsured]END)' datatype='real' name='[Calculation_921830614874894338]' role='measure' type='quantitative' user:unnamed='Sheet 4'>
              <calculation class='tableau' formula='SUM(if [State] = &quot;Alabama&quot; then [other_states_aa_uninsured]END)' />
            </column>
            <column caption='SUM(if [State] = &quot;Alabama&quot; then [Other States White Uninsured...' datatype='real' name='[Calculation_921830614874968067]' role='measure' type='quantitative' user:unnamed='Sheet 4'>
              <calculation class='tableau' formula='SUM(if [State] = &quot;Alabama&quot; then [other_states_white_uninsured] END)' />
            </column>
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
            <column caption='Arkansas Aa Uninsured' datatype='real' name='[arkansas_aa_uninsured]' role='measure' type='quantitative' />
            <column caption='Arkansas White Uninsured' datatype='real' name='[arkansas_white_uninsured]' role='measure' type='quantitative' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:ok]' pivot='key' type='ordinal' />
            <column caption='Other States Aa Uninsured' datatype='real' name='[other_states_aa_uninsured]' role='measure' type='quantitative' />
            <column caption='Other States White Uninsured' datatype='real' name='[other_states_white_uninsured]' role='measure' type='quantitative' />
            <column-instance column='[arkansas_aa_uninsured]' derivation='Sum' name='[sum:arkansas_aa_uninsured:qk]' pivot='key' type='quantitative' />
            <column-instance column='[arkansas_white_uninsured]' derivation='Sum' name='[sum:arkansas_white_uninsured:qk]' pivot='key' type='quantitative' />
            <column-instance column='[other_states_white_uninsured]' derivation='Sum' name='[sum:other_states_white_uninsured:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_921830614874894338]' derivation='User' name='[usr:Calculation_921830614874894338:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_921830614874968067]' derivation='User' name='[usr:Calculation_921830614874968067:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1gnqv5n0oig9io18z156r1uqzl5c].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1gnqv5n0oig9io18z156r1uqzl5c].[sum:arkansas_aa_uninsured:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1gnqv5n0oig9io18z156r1uqzl5c].[sum:arkansas_white_uninsured:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1gnqv5n0oig9io18z156r1uqzl5c].[usr:Calculation_921830614874894338:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1gnqv5n0oig9io18z156r1uqzl5c].[usr:Calculation_921830614874968067:qk]&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[federated.1gnqv5n0oig9io18z156r1uqzl5c].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.1gnqv5n0oig9io18z156r1uqzl5c].[sum:arkansas_aa_uninsured:qk]&quot;</bucket>
              <bucket>&quot;[federated.1gnqv5n0oig9io18z156r1uqzl5c].[sum:arkansas_white_uninsured:qk]&quot;</bucket>
              <bucket>&quot;[federated.1gnqv5n0oig9io18z156r1uqzl5c].[usr:Calculation_921830614874894338:qk]&quot;</bucket>
              <bucket>&quot;[federated.1gnqv5n0oig9io18z156r1uqzl5c].[sum:other_states_white_uninsured:qk]&quot;</bucket>
            </dictionary>
          </sort>
          <slices>
            <column>[federated.1gnqv5n0oig9io18z156r1uqzl5c].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1gnqv5n0oig9io18z156r1uqzl5c].[Multiple Values]' scope='rows' value='Uninsured Rate %' />
            <format attr='subtitle' class='0' field='[federated.1gnqv5n0oig9io18z156r1uqzl5c].[Multiple Values]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.1gnqv5n0oig9io18z156r1uqzl5c].[Multiple Values]' scope='rows' value='true' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.1gnqv5n0oig9io18z156r1uqzl5c].[sum:arkansas_aa_uninsured:qk]' value='' />
          </style-rule>
          <style-rule element='dropline'>
            <format attr='line-visibility' value='on' />
            <format attr='line-pattern-only' value='dashed' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='line-visibility' value='on' />
            <format attr='line-pattern-only' value='dashed' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='line-visibility' value='on' />
            <format attr='line-pattern-only' value='dotted' />
          </style-rule>
        </style>
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1gnqv5n0oig9io18z156r1uqzl5c].[Multiple Values]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1gnqv5n0oig9io18z156r1uqzl5c].[:Measure Names]</rows>
        <cols>[federated.1gnqv5n0oig9io18z156r1uqzl5c].[none:Year:ok]</cols>
      </table>
    </worksheet>
    <worksheet name='Crosstab Border'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Change in Uninsured Rate of White and African American Millenials Age 19 to 34:  Arkansas Vs. Border States&#10;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='State level insurance rates' name='federated.1gnqv5n0oig9io18z156r1uqzl5c' />
          </datasources>
          <datasource-dependencies datasource='federated.1gnqv5n0oig9io18z156r1uqzl5c'>
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
            <column caption='Millenial Aa Un 19 34' datatype='real' name='[millenial_aa_un_19_34]' role='measure' type='quantitative' />
            <column caption='Millenial White Un 19 34' datatype='real' name='[millenial_white_un_19_34]' role='measure' type='quantitative' />
            <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:ok]' pivot='key' type='ordinal' />
            <column-instance column='[millenial_aa_un_19_34]' derivation='Sum' name='[sum:millenial_aa_un_19_34:qk]' pivot='key' type='quantitative' />
            <column-instance column='[millenial_white_un_19_34]' derivation='Sum' name='[sum:millenial_white_un_19_34:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1gnqv5n0oig9io18z156r1uqzl5c].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1gnqv5n0oig9io18z156r1uqzl5c].[sum:millenial_aa_un_19_34:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1gnqv5n0oig9io18z156r1uqzl5c].[sum:millenial_white_un_19_34:qk]&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1gnqv5n0oig9io18z156r1uqzl5c].[none:State:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Arkansas&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Louisiana&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Mississippi&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Missouri&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Oklahoma&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Tennessee&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Texas&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[federated.1gnqv5n0oig9io18z156r1uqzl5c].[none:State:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Alaska&quot;</bucket>
              <bucket>&quot;Arizona&quot;</bucket>
              <bucket>&quot;Arkansas&quot;</bucket>
              <bucket>&quot;Alabama&quot;</bucket>
              <bucket>&quot;California&quot;</bucket>
              <bucket>&quot;Colorado&quot;</bucket>
              <bucket>&quot;Connecticut&quot;</bucket>
              <bucket>&quot;Delaware&quot;</bucket>
              <bucket>&quot;District of Columbia&quot;</bucket>
              <bucket>&quot;Florida&quot;</bucket>
              <bucket>&quot;Georgia&quot;</bucket>
              <bucket>&quot;Hawaii&quot;</bucket>
              <bucket>&quot;Idaho&quot;</bucket>
              <bucket>&quot;Illinois&quot;</bucket>
              <bucket>&quot;Indiana&quot;</bucket>
              <bucket>&quot;Iowa&quot;</bucket>
              <bucket>&quot;Kansas&quot;</bucket>
              <bucket>&quot;Kentucky&quot;</bucket>
              <bucket>&quot;Louisiana&quot;</bucket>
              <bucket>&quot;Maine&quot;</bucket>
              <bucket>&quot;Maryland&quot;</bucket>
              <bucket>&quot;Massachusetts&quot;</bucket>
              <bucket>&quot;Michigan&quot;</bucket>
              <bucket>&quot;Minnesota&quot;</bucket>
              <bucket>&quot;Mississippi&quot;</bucket>
              <bucket>&quot;Missouri&quot;</bucket>
              <bucket>&quot;Montana&quot;</bucket>
              <bucket>&quot;Nebraska&quot;</bucket>
              <bucket>&quot;Nevada&quot;</bucket>
              <bucket>&quot;New Hampshire&quot;</bucket>
              <bucket>&quot;New Jersey&quot;</bucket>
              <bucket>&quot;New Mexico&quot;</bucket>
              <bucket>&quot;New York&quot;</bucket>
              <bucket>&quot;North Carolina&quot;</bucket>
              <bucket>&quot;North Dakota&quot;</bucket>
              <bucket>&quot;Ohio&quot;</bucket>
              <bucket>&quot;Oklahoma&quot;</bucket>
              <bucket>&quot;Oregon&quot;</bucket>
              <bucket>&quot;Pennsylvania&quot;</bucket>
              <bucket>&quot;Rhode Island&quot;</bucket>
              <bucket>&quot;South Carolina&quot;</bucket>
              <bucket>&quot;South Dakota&quot;</bucket>
              <bucket>&quot;Tennessee&quot;</bucket>
              <bucket>&quot;Texas&quot;</bucket>
              <bucket>&quot;Utah&quot;</bucket>
              <bucket>&quot;Vermont&quot;</bucket>
              <bucket>&quot;Virginia&quot;</bucket>
              <bucket>&quot;Washington&quot;</bucket>
              <bucket>&quot;West Virginia&quot;</bucket>
              <bucket>&quot;Wisconsin&quot;</bucket>
              <bucket>&quot;Wyoming&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <sort class='computed' column='[federated.1gnqv5n0oig9io18z156r1uqzl5c].[none:Year:ok]' direction='DESC' using='[federated.1gnqv5n0oig9io18z156r1uqzl5c].[sum:millenial_white_un_19_34:qk]'>
            <groupfilter function='member' level='[none:State:nk]' member='&quot;Missouri&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </sort>
          <slices>
            <column>[federated.1gnqv5n0oig9io18z156r1uqzl5c].[none:State:nk]</column>
            <column>[federated.1gnqv5n0oig9io18z156r1uqzl5c].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-align' value='center' />
          </style-rule>
          <style-rule element='field-labels'>
            <format attr='background-color' value='#e6e6e6' />
          </style-rule>
          <style-rule element='dropline'>
            <format attr='line-visibility' value='on' />
            <format attr='line-pattern-only' value='dashed' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='line-visibility' value='on' />
            <format attr='line-pattern-only' value='dashed' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='line-visibility' value='on' />
            <format attr='line-pattern-only' value='dotted' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1gnqv5n0oig9io18z156r1uqzl5c].[Multiple Values]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1gnqv5n0oig9io18z156r1uqzl5c].[none:Year:ok]</rows>
        <cols>([federated.1gnqv5n0oig9io18z156r1uqzl5c].[none:State:nk] / [federated.1gnqv5n0oig9io18z156r1uqzl5c].[:Measure Names])</cols>
      </table>
    </worksheet>
    <worksheet name='Sheet 1'>
      <table>
        <view>
          <datasources />
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
    </worksheet>
    <worksheet name='Sheet 3'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Change in Arkansas Uninsured Rate of White and African American Millenials Age 19 to 34</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='State level insurance rates' name='federated.1gnqv5n0oig9io18z156r1uqzl5c' />
          </datasources>
          <datasource-dependencies datasource='federated.1gnqv5n0oig9io18z156r1uqzl5c'>
            <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
            <column caption='Arkansas Aa Uninsured' datatype='real' name='[arkansas_aa_uninsured]' role='measure' type='quantitative' />
            <column caption='Arkansas White Uninsured' datatype='real' name='[arkansas_white_uninsured]' role='measure' type='quantitative' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:qk]' pivot='key' type='quantitative' />
            <column-instance column='[arkansas_aa_uninsured]' derivation='Sum' name='[sum:arkansas_aa_uninsured:qk]' pivot='key' type='quantitative' />
            <column-instance column='[arkansas_white_uninsured]' derivation='Sum' name='[sum:arkansas_white_uninsured:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1gnqv5n0oig9io18z156r1uqzl5c].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1gnqv5n0oig9io18z156r1uqzl5c].[sum:arkansas_aa_uninsured:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1gnqv5n0oig9io18z156r1uqzl5c].[sum:arkansas_white_uninsured:qk]&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1gnqv5n0oig9io18z156r1uqzl5c].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1gnqv5n0oig9io18z156r1uqzl5c].[Multiple Values]' scope='rows' value='Uninsured Rate' />
            <format attr='subtitle' class='0' field='[federated.1gnqv5n0oig9io18z156r1uqzl5c].[Multiple Values]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.1gnqv5n0oig9io18z156r1uqzl5c].[Multiple Values]' scope='rows' value='true' />
            <encoding attr='space' class='0' field='[federated.1gnqv5n0oig9io18z156r1uqzl5c].[none:Year:qk]' field-type='quantitative' max='2018' min='2011' range-type='fixed' scope='cols' type='space' />
            <format attr='subtitle' class='0' field='[federated.1gnqv5n0oig9io18z156r1uqzl5c].[none:Year:qk]' scope='cols' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.1gnqv5n0oig9io18z156r1uqzl5c].[none:Year:qk]' scope='cols' value='true' />
          </style-rule>
        </style>
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1gnqv5n0oig9io18z156r1uqzl5c].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1gnqv5n0oig9io18z156r1uqzl5c].[Multiple Values]</rows>
        <cols>[federated.1gnqv5n0oig9io18z156r1uqzl5c].[none:Year:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Sheet 8'>
      <table>
        <view>
          <datasources />
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='Dashboard 1'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='100000' id='5' param='horz' type='layout-flow' w='100000' x='0' y='0'>
            <zone h='100000' id='3' type='layout-basic' w='99600' x='0' y='0'>
              <zone h='68250' id='1' name='Arkansas VS National' w='99600' x='0' y='0' />
              <zone h='31750' id='7' name='Arkansas VS National Crosstab' w='76600' x='0' y='68250' />
              <zone h='31750' id='6' name='Arkansas VS National' pane-specification-id='1' param='[federated.1gnqv5n0oig9io18z156r1uqzl5c].[:Measure Names]' type='color' w='23000' x='76600' y='68250' />
            </zone>
          </zone>
        </zone>
      </zones>
    </dashboard>
    <dashboard name='Dashboard 2'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <zones>
        <zone h='100000' id='8' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='100000' id='11' param='vert' type='layout-flow' w='100000' x='0' y='0'>
            <zone h='99500' id='9' type='layout-basic' w='100000' x='0' y='0' />
          </zone>
        </zone>
        <zone h='37750' id='7' name='Crosstab Border' show-title='false' w='95100' x='5500' y='67125'>
          <layout-cache fixed-size-w='922' type-h='fixed' type-w='fixed' />
        </zone>
        <zone h='62125' id='1' name='Arkansas V Border' w='97600' x='300' y='1250' />
        <zone h='7250' id='6' name='Arkansas V Border' pane-specification-id='2' param='[federated.1gnqv5n0oig9io18z156r1uqzl5c].[:Measure Names]' type='color' w='14000' x='84400' y='4875' />
      </zones>
    </dashboard>
    <dashboard name='Meeting with Urban League' type='storyboard'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Uninsured Millenians in Arkansas and Affordable Care Act. </run>
          </formatted-text>
        </title>
      </layout-options>
      <style>
        <style-rule element='story-point-caption'>
          <format attr='width' value='362' />
        </style-rule>
      </style>
      <size sizing-mode='automatic' />
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='100000' id='1' param='vert' removable='false' type='layout-flow' w='100000' x='0' y='0'>
            <zone h='4396' id='3' type='title' w='100000' x='0' y='0' />
            <zone h='10645' id='4' is-fixed='true' paired-zone-id='5' removable='false' type='flipboard-nav' w='100000' x='0' y='4396' />
            <zone h='84568' id='5' paired-zone-id='4' removable='false' type='flipboard' w='100000' x='0' y='15041'>
              <flipboard active-id='2' nav-type='caption' show-nav-arrows='true'>
                <story-points>
                  <story-point caption='Arkansas has seen signficant drops in the rate of uninsured Millenials since the passage of the Affordable Care Act' captured-sheet='Arkansas' id='1' />
                  <story-point caption='Prior to the ACA, Arkansas&apos;s uninsured rate for African Americans Millenials was about 5% higher than the national average. Now at 14.54%  the rate in Arkansas is about 3% lower than the national average of 17.67%. ' captured-sheet='Dashboard 1' id='2' />
                  <story-point caption='Arkansas was the first state in the surrounding area that expanded Medicaid coverage under the states Private Option program in 2013. The expansion corresponds with a signficant drop in the unsinured rate among both African American and White Millenials. Louisiana was the second state to expand their traditional Medicaid program in 2016. None of the other surrounding states have expanded Mediciad programs and have signficantly higher rates of uninsured Millenials.  ' captured-sheet='Dashboard 2' id='3' />
                </story-points>
              </flipboard>
            </zone>
          </zone>
        </zone>
      </zones>
    </dashboard>
  </dashboards>
  <windows source-height='30'>
    <window class='worksheet' name='Sheet 1'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
    </window>
    <window class='worksheet' name='Arkansas'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='268'>
            <card pane-specification-id='1' param='[federated.1gnqv5n0oig9io18z156r1uqzl5c].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1gnqv5n0oig9io18z156r1uqzl5c].[none:Year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Arkansas VS National'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='270'>
            <card pane-specification-id='1' param='[federated.1gnqv5n0oig9io18z156r1uqzl5c].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1gnqv5n0oig9io18z156r1uqzl5c].[:Measure Names]</field>
            <field>[federated.1gnqv5n0oig9io18z156r1uqzl5c].[none:Year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Arkansas VS National Crosstab'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
    </window>
    <window class='worksheet' name='Arkansas V Border'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='2' param='[federated.1gnqv5n0oig9io18z156r1uqzl5c].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1gnqv5n0oig9io18z156r1uqzl5c].[:Measure Names]</field>
            <field>[federated.1gnqv5n0oig9io18z156r1uqzl5c].[none:State:nk]</field>
            <field>[federated.1gnqv5n0oig9io18z156r1uqzl5c].[none:Year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Crosstab Border'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1gnqv5n0oig9io18z156r1uqzl5c].[:Measure Names]</field>
            <field>[federated.1gnqv5n0oig9io18z156r1uqzl5c].[none:Year:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Sheet 3'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.1gnqv5n0oig9io18z156r1uqzl5c].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <selection-collection>
          <node-selection select-tuples='false'>
            <oriented-node-reference orientation='horizontal'>
              <node-reference>
                <axis>[federated.1gnqv5n0oig9io18z156r1uqzl5c].[none:Year:qk]</axis>
              </node-reference>
              <page-reference />
            </oriented-node-reference>
          </node-selection>
        </selection-collection>
        <highlight>
          <color-one-way>
            <field>[federated.1gnqv5n0oig9io18z156r1uqzl5c].[:Measure Names]</field>
            <field>[federated.1gnqv5n0oig9io18z156r1uqzl5c].[none:Year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Sheet 8'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
    </window>
    <window class='dashboard' name='Dashboard 1'>
      <viewpoints>
        <viewpoint name='Arkansas VS National'>
          <zoom type='entire-view' />
          <highlight field='[federated.1gnqv5n0oig9io18z156r1uqzl5c].[:Measure Names]'>
            <bucket-selection />
          </highlight>
        </viewpoint>
        <viewpoint name='Arkansas VS National Crosstab' />
      </viewpoints>
      <active id='6' />
    </window>
    <window class='dashboard' name='Dashboard 2'>
      <viewpoints>
        <viewpoint name='Arkansas V Border'>
          <zoom type='entire-view' />
          <highlight field='[federated.1gnqv5n0oig9io18z156r1uqzl5c].[:Measure Names]'>
            <bucket-selection />
          </highlight>
        </viewpoint>
        <viewpoint name='Crosstab Border' />
      </viewpoints>
      <active id='-1' />
    </window>
    <window class='dashboard' maximized='true' name='Meeting with Urban League'>
      <viewpoints />
      <active id='4' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Arkansas' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Arkansas V Border' width='192'>
      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
      AAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Arkansas VS National' width='192'>
      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
      SUVORK5CYII=
    </thumbnail>
    <thumbnail height='124' name='Arkansas VS National Crosstab' width='192'>
      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
      H2wCs7OuVp53AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Crosstab Border' width='192'>
      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
      Yks2oRlezhu4FSiIvinstSdpiayhdGMBRbYMPiQDj0ooKgPmzHRyDQJSdI6Bk89wOuW73Geb
      Dw5OOnG6xtDnHyHtNibOJRIgiP3E//Dj81qOfuWL7CqzEa8XQNIRY9WjD47jmQbiZWamPSgG
      LVZjzE1OFsHjstPSNkH67ocpiPtkL35uhgl7A++c/C1dXgtvvKBHmB3G7j3HD/sP8+3vHCHf
      pH9vltNgtOSx5UAeoCCLQYbrajg/Okz9uXYunj6FSzzN70w6hJlBOr2NfHf0KN994j4yl3En
      6HqQQn6G362hWVXJ9q2FZKfEXj9HUlMx6nVsra7GlhYLkp+B2Uv8tM3NfbYUkHy4XCOMe1PZ
      VnJ7y+alEcBzmZefH6D4sR9wYH32B4otdRzJGTlYDG9SX99LyWaFhsZBtLHVpCXHfeRjSQnO
      4mxvoTucz7HNGejvDB3MXwxx+Xfxua8VMPf+W3H3a/ysL4/7924mbWG3vLCXsStv8Za4jsNb
      sokVp3GOevCGMyjbsZ/S4ip8kfdiO17mRwMVPHxoAwnLYZD3kZAIhrqovaJn82Pl5Jk1N86P
      lA2UhX/BOx1ZJCUWYorO0DMQYs3hed2jODPJ1IgDbdmDZBlv776WRoDhTuqnHAT++9s0/Wz+
      hPqELHZ+4Qke3VjFrj3DvPD89/nqM2qSynfzwMGt2KxzXHz6P3n2rJ2pGTczHhX/9IVTWC0H
      +MenjpMz7aSp2Y5x/TdYZ/1kt0O8CjmCu/XXfP/fahiLioQCfuTnani2eCeffvhvOFhetSC2
      AWswn9KiDEwaNY5X/pmn1V/n+4eSiElJQ3nxxzz+k1ECQiwZZbv56weqKc1KQi9kfjBG+Dxx
      oUIqijOIWS4CeC7x9H/9mrMdTvxzbnz6Wl7Tqyg69iTfKmjg1OsnePXSK1dnbVP+Dh58+Dg7
      eIcTdoF1W/ewPjuZ3Uf3cOL5p3n85yOENHEU7f1bvlGqByXA+MQA9oF4tt1jue2EXppJXtjL
      xIwfeeGRKjUx5gQsBoFoJIjP6yMUFdDGxGKOjUGrUQjNzuANitc4xguCEWuqGW00gt/nQ9LF
      YTFqP27J9m1jSSZ5ioIU8eKZDlwjFxS0BkwmM7H6BQ/ziI+ZiBaTUYdGJSD63MxhITFWjSyL
      BH1e/EERWVChNcRiMhk/3B8z7MUj6rEataiWiwBSiNkZL0HxWkdRrSkRqy6Ex+O/9t41Bkxm
      MwZC+EXQ62PQa1UgiwS8c/iCIrKgRm+2YjVqERSZqBgmFAJD3M2W2R/GqkvknwmrLpF3Jv4f
      eeIT7/RrWD0AAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Dashboard 1' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Dashboard 2' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Meeting with Urban League' width='192'>
      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
      cOBdqVHlA+Z3B//kOxbM7BIAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Sheet 1' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAACFUlEQVR4nO3TMQEAIAzAMMC/5yFjRxMFfXpnZg5Eve0A2GQA0gxAmgFIMwBpBiDNAKQZ
      gDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFI
      MwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQD
      kGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBp
      BiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA
      0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDN
      AKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxA
      mgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZ
      gDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFI
      MwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKR9Y+0F
      fBUOM1sAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Sheet 3' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sheet 8' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAACFUlEQVR4nO3TMQEAIAzAMMC/5yFjRxMFfXpnZg5Eve0A2GQA0gxAmgFIMwBpBiDNAKQZ
      gDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFI
      MwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQD
      kGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBp
      BiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA
      0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDN
      AKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxA
      mgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZ
      gDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFI
      MwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKR9Y+0F
      fBUOM1sAAAAASUVORK5CYII=
    </thumbnail>
  </thumbnails>
</workbook>
